#! /usr/bin/awk -f

##	$COBC -q --help               2>/dev/null | \
##		$GREP    -A2000 "$section" | \
##		$GREP -E -B2000 "^$" -m 1  | \
##		$SED -e 's/^\t/D~/g'            \
##		     -e 's/\t/~/g'              \
##		     -e 's/* NOT \(.\+\)/; @emph{not \1}/g' \
##		     -e 's/* ALWAYS \(.\+\)/; @emph{always \1}/g' \
##		     -e 's/* /; /g' \
##		     -e 's/^    \+/D~/g'         \
##		     -e 's/^ \+//g'                \
##		     -e 's/  \+/~/g'               \
##		     -e 's/<\([^>]\+\)>/@var{\1}/g'| \
##	while IFS='~' read -r name desc; do
##		if test -z "$name"; then continue; fi
##		if test -z "$header_found"; then
##			header_found=1
##			echo "@section $section"   >>$1
##			echo "@table @code"        >>$1
##		else
##			if test "$name" != "D"; then
##				echo "@item @code{$name}"  >>$1
##			fi
##			echo "$desc"      | \
##			$SED -e 's/ \(-[Wfv][a-z-]*\)/ @option{\1}/g'       \
##			     -e 's/\([ (]\)\([A-Z][A-Z -]*[A-Z]\)/\1@code{\2}/g' \
##			     -e 's/^\([A-Z][A-Z -]*[A-Z]\)/@code{\1}/g' \
##			     -e 's/@code{\(IBM\|ANSI\|ISO\|NIST\)}/\1/g'   >>$1
##		fi
##	done
##	echo "@end table"          >>$1

/[Oo]ptions:$/,/^$/ {
    if( debug ) { print "@c input:", $0 }

    # blank lines separate sections
    if( /^$/ ) {
	print "@end table"
	next
    }

    # option heading introduce sections
    if( /[Oo]ptions:$/ ) {
	if( /^Options:/ ) {
	    $0 = "Help " $0
	}
	sub(/:$/, "")
	if( nsection++ ) {
	    print ""
	}
	print "@section", $0
	print "@table @option"
	sep = ""
	next
    }

    # mark up    
    gsub(/[*] NOT /, "; @emph{not} ");
    gsub(/[*] ALWAYS /, "; @emph{always} ");
    gsub(/[*] /, "; ");
    gsub(/^ +/, "");

    # separate key from value
    sub(/\t|  +/, "~")

    # convert <word> to @var{word}
    while( match($0, /<[^>]+>/) ) {
	#print "@c found:", $0
	$0 = substr($0, 1, RSTART-1) \
	    "@var{" substr($0, RSTART+1, RLENGTH-2) "}" \
	    substr($0, RSTART + RLENGTH, length($0))
	#print "@c  made:", $0
    }

    # convert 'x' to @samp{x}
    while( match($0, /'.'/) ) {
	#print "@c found:", $0
	$0 = substr($0, 1, RSTART-1) \
	    "@samp{" substr($0, RSTART+1, RLENGTH-2) "}" \
	    substr($0, RSTART + RLENGTH, length($0))
	#print "@c  made:", $0
    }

    # convert most WORD to @code{WORD}
    if( /[A-Z][A-Z]+/ ) {
	n = split($0, a)
	line = ""
	for( i=1; i <= n; i++ ) {
	    w = a[i]
	    if( w !~ /IBM\|ANSI\|ISO\|NIST|COBOL/ ) {
		gsub(/[A-Z'][A-Z0-9']+/, "@code{&}", w)
	    }

	    word = i > 1? " " w : w
	    line = line word
	}
	$0 = line
    }

    # A leading dash indicates a new option. Make it the @item and put
    # the rest on the next line.  Else just print what we have.  
    if( /^-/ ) {
	sub(/~/, "\n")
	print sep "@item", $0
	sep = "\n"
	next
    } 

    print
}
