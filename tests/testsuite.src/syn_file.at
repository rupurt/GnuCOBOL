## Copyright (C) 2003-2012, 2014 Free Software Foundation, Inc.
## Written by Keisuke Nishida, Roger While, Simon Sobisch
## 
## This file is part of GnuCOBOL.
## 
## The GnuCOBOL compiler is free software: you can redistribute it
## and/or modify it under the terms of the GNU General Public License
## as published by the Free Software Foundation, either version 3 of the
## License, or (at your option) any later version.
## 
## GnuCOBOL is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
## 
## You should have received a copy of the GNU General Public License
## along with GnuCOBOL.  If not, see <http://www.gnu.org/licenses/>.

### GnuCOBOL Test Suite


AT_SETUP([SELECT without ASSIGN])
AT_KEYWORDS([file])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT
               TEST-FILE
               ORGANIZATION IS SEQUENTIAL.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC      PIC X(4).
       PROCEDURE        DIVISION.
           OPEN  INPUT TEST-FILE.
           CLOSE TEST-FILE.
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob: 8: Error: ASSIGN clause is required for file 'TEST-FILE'
])

AT_CLEANUP


AT_SETUP([START on SEQUENTIAL file])
AT_KEYWORDS([file])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN       "./TEST-FILE"
                        ORGANIZATION IS LINE SEQUENTIAL.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC      PIC X(4).
       PROCEDURE        DIVISION.
           OPEN  INPUT TEST-FILE.
           START TEST-FILE KEY EQUAL TEST-REC
           END-START.
           CLOSE TEST-FILE.
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob: 15: Error: START not allowed on SEQUENTIAL files
])

AT_CLEANUP


AT_SETUP([DECLARATIVES Invalid procedure reference (1)])
AT_KEYWORDS([file])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN       "./TEST-FILE"
                        ORGANIZATION IS LINE SEQUENTIAL.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC      PIC X(4).
       PROCEDURE        DIVISION.
       DECLARATIVES.
       P01 SECTION.
           USE AFTER ERROR PROCEDURE ON TEST-FILE.
       P02.
           DISPLAY "OK"
           END-DISPLAY.
           GO TO PP02.
       END DECLARATIVES.
       PP01 SECTION.
       PP02.
           OPEN  INPUT TEST-FILE.
           CLOSE TEST-FILE.
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob: In section 'P01':
prog.cob: In paragraph 'P02':
prog.cob: 20: Error: 'PP02' is not in DECLARATIVES
])

AT_CLEANUP


AT_SETUP([DECLARATIVES Invalid procedure reference (2)])
AT_KEYWORDS([file])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN       "./TEST-FILE"
                        ORGANIZATION IS LINE SEQUENTIAL.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC      PIC X(4).
       PROCEDURE        DIVISION.
       DECLARATIVES.
       P01 SECTION.
           USE AFTER ERROR PROCEDURE ON TEST-FILE.
       P02.
           DISPLAY "OK"
           END-DISPLAY.
           PERFORM PP02.
       END DECLARATIVES.
       PP01 SECTION.
       PP02.
           OPEN  INPUT TEST-FILE.
           CLOSE TEST-FILE.
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob: In section 'P01':
prog.cob: In paragraph 'P02':
prog.cob: 20: Error: 'PP02' is not in DECLARATIVES
])

AT_CLEANUP


AT_SETUP([DECLARATIVES Invalid procedure reference (3)])
AT_KEYWORDS([file])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       ENVIRONMENT      DIVISION.
       INPUT-OUTPUT     SECTION.
       FILE-CONTROL.
       SELECT TEST-FILE ASSIGN       "./TEST-FILE"
                        ORGANIZATION IS LINE SEQUENTIAL.
       DATA             DIVISION.
       FILE             SECTION.
       FD TEST-FILE.
       01 TEST-REC      PIC X(4).
       PROCEDURE        DIVISION.
       DECLARATIVES.
       P01 SECTION.
           USE AFTER ERROR PROCEDURE ON TEST-FILE.
       P02.
           DISPLAY "OK"
           END-DISPLAY.
       END DECLARATIVES.
       PP01 SECTION.
       PP02.
           OPEN  INPUT TEST-FILE.
           CLOSE TEST-FILE.
           GO TO P02.
           STOP RUN.
])

AT_CHECK([$COMPILE_ONLY prog.cob], [1], [],
[prog.cob: In section 'PP01':
prog.cob: In paragraph 'PP02':
prog.cob: 25: Error: Invalid reference to 'P02' (In DECLARATIVES)
])

AT_CLEANUP

AT_SETUP([KEY type checks])
AT_KEYWORDS([RELATIVE FILE])

AT_DATA([prog.cob], [
       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog.
       ENVIRONMENT DIVISION.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
            SELECT FILE1 ASSIGN DISK
            ORGANIZATION RELATIVE ACCESS MODE RANDOM
            RELATIVE KEY FILE1-KEY.
            SELECT FILE2 ASSIGN DISK
            ORGANIZATION RELATIVE ACCESS MODE RANDOM
            RELATIVE KEY FILE2-KEY.
            SELECT FILE3 ASSIGN DISK
            ORGANIZATION RELATIVE ACCESS MODE RANDOM
            RELATIVE KEY FILE3-KEY.
            SELECT FILE4 ASSIGN DISK
            ORGANIZATION RELATIVE ACCESS MODE RANDOM
            RELATIVE KEY FILE4-KEY.
            SELECT FILE5 ASSIGN DISK
            ORGANIZATION RELATIVE ACCESS MODE RANDOM
            RELATIVE KEY FILE5-KEY.
       DATA DIVISION.
       FILE SECTION.
       FD FILE1.
            01  FILE1-REC PIC X.
       FD FILE2.
            01  FILE2-REC PIC X.
       FD FILE3.
            01  FILE3-REC PIC X.
       FD FILE4.
            01  FILE4-REC.
               05  FLD1      PIC X.
               05  FILE4-KEY PIC 999.
       FD FILE5.
            01  FILE5-REC PIC X.
       WORKING-STORAGE SECTION.
            77  FILE1-KEY PIC XXXX.
            01  FILE2-KEY.
                05  F2-KEY PIC 9(5).
            01  F3-KEY.
                05  FILE3-KEY PIC 9(5) OCCURS 2 TIMES.
            77  FILE5-KEY PIC 999V9.
       PROCEDURE DIVISION.
            STOP RUN.
])

AT_CHECK([$COMPILE prog.cob], [1], [], [prog.cob: 9: Error: File FILE1: RELATIVE KEY FILE1-KEY is not numeric
prog.cob: 12: Error: File FILE2: RELATIVE KEY FILE2-KEY is not numeric
prog.cob: 15: Error: File FILE3: RELATIVE KEY FILE3-KEY cannot have OCCURS
prog.cob: 21: Error: File FILE5: RELATIVE KEY FILE5-KEY must be integer
])

AT_CLEANUP

